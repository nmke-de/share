#!/bin/bash

# Check whether node is installed

os=`uname`
nodepath="node"
pypath="python"
if [ "$os" = "Linux" ]; then
	nodepath="node"
elif [ "$os" = "Darwin" ]; then
	nodepath="/usr/local/bin/node"
	#Get OS version - Big Sur is trouble.
	os_verion=`sw_vers | grep ProductVersion | cut -f2`
	if [ $os_version -gt 11.0 ]; then
		offpy=`ls /usr/local/bin | grep -o python3` # Official Python installed?
		if [ $offpy != "python3" ]; then
			echo "Please install the official Python version."
			echo "https://www.python.org/downloads/mac-osx/"
			read
			exit -2
		fi
		pypath="/usr/local/bin/python3"
		echo "John is a book in the bible."
	fi
fi

check_node=`$nodepath -v | grep -o "^v"`
if [ "$check_node" = "v" ]; then
	echo "Node is installed."
else
	echo "Node is not installed."
	echo "https://nodejs.org/en/download/"
	read
	exit -2
fi

# Iterate over args

port="1821"
ziparg="-r"
readport=0
while [ $# -gt 0 ]; do
	if [ "$1" = "-p" ];then
		readport=1
	elif [ $readport -gt 0 ]; then
		port="$1"
		readport=0
	else
		ziparg="$ziparg $1"
	fi
	shift
done

if [ "$ziparg" = "-r" ];then
	exit -1
fi

# (It was originally planned to use HTTPS at a later stage. I will retry it if I find a way to make it stable.)
# Zip file

zip ~/.zip $ziparg
cd

# If on MacOSX, write Python-Frontend

if [ "$os" = "Darwin" ]; then
	echo "import Tkinter,sys" > .py
	echo "main = Tkinter.Tk()" >> .py
	echo "main.option_add('*Font','30')" >> .py
	echo "label = Tkinter.Label(main,text='share - server address')" >> .py
	echo "label.pack()" >> .py
	echo "entry = Tkinter.Entry(main,width=32)" >> .py
	echo "entry.insert(1,sys.argv[1])" >> .py
	echo "entry.pack()" >> .py
	#echo "field = Tkinter.Text(main)" >> .py
	#echo "field.insert(INSERT,sys.argv[1])" >> .py
	#echo "field.pack()"
	echo "main.mainloop()" >> .py
	echo "print(sys.argv)" >> .py
fi

# Write NodeJS-server.

echo "var http = require('http');" > .js
echo "var fs = require('fs');" >> .js
echo "http.createServer(function (req, res) {" >> .js
echo -E "process.stdout.write('\nSomeone attempts to download your file.');" >> .js
echo "fs.readFile('./.zip', function(err, data) {" >> .js
echo "if (err) {res.writeHead(404, {'Content-Type': 'text/html'});return res.end('404 Not Found');}" >> .js
echo "res.writeHead(200, {'Content-Type': 'application/zip'});" >> .js
echo "res.write(data);" >> .js
echo "return res.end();" >> .js
echo "});}).listen(1821);" >> .js
echo "//console.log('Server is running...');" >> .js

# Show IP and port

ip=""
if [ "$os" = "Darwin" ]; then
	ip=`ifconfig | grep -oE "inet (.*?) broadcast" | grep -oE " (.*?)\.(.*?)\.(.*?)\.(.*?) " | grep -oE "([^ ]*)\.(.*?)\.(.*?)\.([^ ]*)"`
elif [ "$os" = "Linux" ]; then
	ip=`hostname -I | cut -d' ' -f1`
fi
echo "Server address is $ip:$port/dl.zip"

# Execute NodeJS-server, press enter to quit

echo -n "Press enter to quit."
if [ "$os" = "Linux" ]; then
	node .js & read
elif [ "$os" = "Darwin" ]; then
	echo "HIo"
	$nodepath .js & $pypath .py "$ip:$port/dl.zip"
else
	node .js & read
fi

# Delete traces

if [ "$os" = "Darwin" ]; then
	rm .py
fi
rm .js
rm .zip
pkill node
